<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="QuanDiary.dao.LogLikeDao">
	<select id="checkLogLike" resultType="java.lang.Integer">
		select count(id) from log_like where log = #{0} and user = #{1}
			
	</select>
	<select id="checkLogRead" resultType="java.lang.Integer">
		select count(id) from log_read where log = #{0} and user = #{1}
			
	</select>
	
	<select id="loadLogLike" resultType="java.util.HashMap">
		select u.login_name as loginName, u.display_name as displayName, unix_timestamp(lk.create_time) as createTime
			 from log_like lk left join user u on u.id = lk.user
			where lk.log = #{0} order by lk.create_time desc
			
	</select>
	<select id="loadLogRead" resultType="java.util.HashMap">
		select u.login_name as loginName, u.display_name as displayName, unix_timestamp(lr.create_time) as createTime
			 from log_read lr left join user u on u.id = lr.user
			where lr.log = #{0} order by lr.create_time desc
	</select>
	<insert id="saveLogComment" parameterType="QuanDiary.entity.Comment">
		insert into comment(user,log,status,content,create_time) 
			values (#{user}, #{log},  #{status},#{content}, #{create_time})
	</insert>
	
	<select id="loadLogComment" resultType="java.util.HashMap">
		select u.login_name as loginName, c.content as content ,u.display_name as displayName, unix_timestamp(c.create_time) as createTime
			 from comment c left join user u on u.id = c.user
			where c.log = #{0} order by c.create_time desc
			
	</select>
	
	<select id="logStatistical" resultType="java.util.HashMap">
		SELECT 
	u.display_name as displayName, d.name as deptName,
			(select count(l.id) from log l where l.user = u.id and DATE_FORMAT(l.create_time, '%Y-%m') = #{createTime}) as logNum,
			(select count(lr.id) from log_read lr where lr.user = u.id and DATE_FORMAT(lr.create_time, '%Y-%m') = #{createTime} ) as logReadNum,
			(select count(ll.id) from log_like ll where ll.user = u.id and DATE_FORMAT(ll.create_time, '%Y-%m') = #{createTime} ) as logLikeNum,
			(select count(DISTINCT lc.log) from comment lc where lc.user = u.id and DATE_FORMAT(lc.create_time, '%Y-%m') = #{createTime} ) as logCommentNum
		from user u
			LEFT JOIN dept d on d.id = u.dept

	where u.company = #{companyId}
		and u.status != 92
		limit #{page}, #{rows}
	
	</select>
	
	<insert id="saveLogLike" parameterType="QuanDiary.entity.LogLike">
		insert into log_like(user,log,status,create_time) 
			values (#{user}, #{log},  #{status}, #{create_time})
	</insert>
	<insert id="saveLogRead" parameterType="QuanDiary.entity.LogRead">
		insert into log_read(user,log,status,create_time) 
			values (#{user}, #{log},  #{status}, #{create_time})
	</insert>
</mapper>